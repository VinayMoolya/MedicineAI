{"ast":null,"code":"var _jsxFileName = \"/Users/vinaymoolya/Desktop/projects/medicineai/src/chatbot/MessageParser.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageParser = ({\n  children,\n  actions\n}) => {\n  const parse = message => {\n    if (children.props.state.checker === \"symptom\") {\n      actions.querysymptom(message);\n    } else if (children.props.state.checker === \"medid\") {\n      actions.querymedication(message);\n    } else if (children.props.state.checker === \"medquery\") {\n      actions.processquery(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        parse: parse,\n        actions: {\n          actions\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageParser;\nexport default MessageParser;\nvar _c;\n$RefreshReg$(_c, \"MessageParser\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageParser","children","actions","parse","message","props","state","checker","querysymptom","querymedication","processquery","Children","map","child","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vinaymoolya/Desktop/projects/medicineai/src/chatbot/MessageParser.js"],"sourcesContent":["import React from \"react\";\n\nconst MessageParser = ({ children, actions }) => {\n  const parse = (message) => {\n    \n    if (children.props.state.checker === \"symptom\") {\n      actions.querysymptom(message);\n    } else if (children.props.state.checker === \"medid\") {\n      actions.querymedication(message);\n    } else if (children.props.state.checker === \"medquery\") {\n      actions.processquery(message);\n    }\n  };\n\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          parse: parse,\n          actions: { actions },\n        });\n      })}\n    </div>\n  );\n};\n\nexport default MessageParser;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAC/C,MAAMC,KAAK,GAAIC,OAAO,IAAK;IAEzB,IAAIH,QAAQ,CAACI,KAAK,CAACC,KAAK,CAACC,OAAO,KAAK,SAAS,EAAE;MAC9CL,OAAO,CAACM,YAAY,CAACJ,OAAO,CAAC;IAC/B,CAAC,MAAM,IAAIH,QAAQ,CAACI,KAAK,CAACC,KAAK,CAACC,OAAO,KAAK,OAAO,EAAE;MACnDL,OAAO,CAACO,eAAe,CAACL,OAAO,CAAC;IAClC,CAAC,MAAM,IAAIH,QAAQ,CAACI,KAAK,CAACC,KAAK,CAACC,OAAO,KAAK,UAAU,EAAE;MACtDL,OAAO,CAACQ,YAAY,CAACN,OAAO,CAAC;IAC/B;EACF,CAAC;EAED,oBACEL,OAAA;IAAAE,QAAA,EACGJ,KAAK,CAACc,QAAQ,CAACC,GAAG,CAACX,QAAQ,EAAGY,KAAK,IAAK;MACvC,oBAAOhB,KAAK,CAACiB,YAAY,CAACD,KAAK,EAAE;QAC/BV,KAAK,EAAEA,KAAK;QACZD,OAAO,EAAE;UAAEA;QAAQ;MACrB,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBInB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}