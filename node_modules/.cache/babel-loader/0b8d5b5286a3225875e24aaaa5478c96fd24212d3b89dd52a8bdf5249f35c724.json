{"ast":null,"code":"var _jsxFileName = \"/Users/vinaymoolya/Desktop/projects/medicineai/src/chatbot/ActionProvider.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  const querysymptom = symptom => {\n    console.log(\"Sending the Symptom to the server\", symptom);\n  };\n  const converse = async msg => {\n    console.log(\"MEssage sent to server \", msg);\n    let message;\n    try {\n      const result = await axios.post(\"http://localhost:3001/nlpbot\", {\n        payload: msg\n      });\n      // console.log(\"Recieved Response :: \", result.data);\n      message = createChatBotMessage(result.data);\n      updateState(message, \"generic\");\n    } catch (e) {\n      console.log(\"Error in Retrieving from Express server....\");\n      console.log(e);\n    }\n    message = createChatBotMessage(`Here are Some Services that I can assist you with!`, {\n      withAvatar: true,\n      delay: 500,\n      widget: \"bot_functions\"\n    });\n    updateState(message, \"generic\");\n  };\n  const updateState = (message, checker) => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, message],\n      checker\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {}\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","querysymptom","symptom","console","log","converse","msg","message","result","axios","post","payload","data","updateState","e","withAvatar","delay","widget","checker","prev","messages","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vinaymoolya/Desktop/projects/medicineai/src/chatbot/ActionProvider.js"],"sourcesContent":["import React from \"react\";\n\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\n  const querysymptom = (symptom) =>{\n        console.log(\"Sending the Symptom to the server\",symptom)\n\n        \n  }\n    const converse = async (msg) => {\n      console.log(\"MEssage sent to server \", msg);\n      let message;\n      try {\n        const result = await axios.post(\"http://localhost:3001/nlpbot\", {\n          payload: msg,\n        });\n        // console.log(\"Recieved Response :: \", result.data);\n        message = createChatBotMessage(result.data);\n        updateState(message, \"generic\");\n      } catch (e) {\n        console.log(\"Error in Retrieving from Express server....\");\n        console.log(e);\n      }\n\n      message = createChatBotMessage(\n        `Here are Some Services that I can assist you with!`,\n        {\n          withAvatar: true,\n          delay: 500,\n          widget: \"bot_functions\",\n        }\n      );\n      updateState(message, \"generic\");\n    };\n  const updateState = (message, checker) => {\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, message],\n      checker,\n    }));\n  };\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {},\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACvE,MAAMC,YAAY,GAAIC,OAAO,IAAI;IAC3BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAACF,OAAO,CAAC;EAG9D,CAAC;EACC,MAAMG,QAAQ,GAAG,MAAOC,GAAG,IAAK;IAC9BH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,GAAG,CAAC;IAC3C,IAAIC,OAAO;IACX,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,8BAA8B,EAAE;QAC9DC,OAAO,EAAEL;MACX,CAAC,CAAC;MACF;MACAC,OAAO,GAAGT,oBAAoB,CAACU,MAAM,CAACI,IAAI,CAAC;MAC3CC,WAAW,CAACN,OAAO,EAAE,SAAS,CAAC;IACjC,CAAC,CAAC,OAAOO,CAAC,EAAE;MACVX,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC1DD,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;IAChB;IAEAP,OAAO,GAAGT,oBAAoB,CAC3B,oDAAmD,EACpD;MACEiB,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CACF,CAAC;IACDJ,WAAW,CAACN,OAAO,EAAE,SAAS,CAAC;EACjC,CAAC;EACH,MAAMM,WAAW,GAAGA,CAACN,OAAO,EAAEW,OAAO,KAAK;IACxCnB,QAAQ,CAAEoB,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEb,OAAO,CAAC;MACrCW;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EACD,oBACEtB,OAAA;IAAAI,QAAA,EACGN,KAAK,CAAC2B,QAAQ,CAACC,GAAG,CAACtB,QAAQ,EAAGuB,KAAK,IAAK;MACvC,oBAAO7B,KAAK,CAAC8B,YAAY,CAACD,KAAK,EAAE;QAC/BE,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA/CIjC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}